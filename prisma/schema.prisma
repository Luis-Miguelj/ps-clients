generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model Clients {
  id        String    @id @default(uuid())
  userId    String
  name      String
  city      String
  status    String
  completed Boolean
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  Tasks     Tasks[]
}

model Tasks {
  id                   String                 @id @default(uuid())
  description          String
  obs                  String?
  types                String
  status               String
  completed            Boolean
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime?              @map("updated_at")
  clientId             String
  client               Clients                @relation(fields: [clientId], references: [id], onDelete: Cascade)
  TransitoInicioDeObra TransitoInicioDeObra[]
  TransitoFinalDeObra  TransitoFinalDeObra[]
  Obra                 Obra[]
  PartialCompletion    PartialCompletion[]
}

model TransitoInicioDeObra {
  id      String    @id @default(uuid())
  inicio  DateTime  @default(now()) @map("inicio")
  fim     DateTime? @map("chegada")
  tasksId String
  Tasks   Tasks?    @relation(fields: [tasksId], references: [id], onDelete: Cascade)
}

model TransitoFinalDeObra {
  id      String    @id @default(uuid())
  inicio  DateTime  @default(now()) @map("inicio")
  fim     DateTime? @map("chegada")
  tasksId String
  Tasks   Tasks?    @relation(fields: [tasksId], references: [id], onDelete: Cascade)
}

model PartialCompletion {
  id        String    @id @default(uuid())
  obs       String
  inicio    DateTime? @map("inicio")
  fim       DateTime? @map("fim")
  completed Boolean
  tasksId   String
  Tasks     Tasks?    @relation(fields: [tasksId], references: [id], onDelete: Cascade)
}

model Obra {
  id                String    @id @default(uuid())
  goingToWork       DateTime? @map("going_to_work")
  arrivingAtWork    DateTime? @map("arriving_at_work")
  workStarted       DateTime? @map("start_work")
  endWork           DateTime? @map("end_work")
  leavingForWork    DateTime? @map("leaving_for_work")
  arrivingAtCompany DateTime? @map("arriving_at_company")

  tasksId String
  Tasks   Tasks? @relation(fields: [tasksId], references: [id], onDelete: Cascade)
}
